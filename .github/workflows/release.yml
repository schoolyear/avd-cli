name: Release

on:
  push:
    tags:
      - 'v*'  # Trigger this workflow when a new tag is pushed that matches the pattern

jobs:
  build:
    name: Build Go binaries (${{ matrix.goos }}/${{ matrix.goarch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: windows
            goarch: amd64
            outfile: avdcli-windows-amd64.exe
          - goos: windows
            goarch: arm64
            outfile: avdcli-windows-arm64.exe
          - goos: darwin
            goarch: amd64
            outfile: avdcli-macos-amd64
          - goos: darwin
            goarch: arm64
            outfile: avdcli-macos-arm64
          - goos: linux
            goarch: amd64
            outfile: avdcli-linux-amd64
          - goos: linux
            goarch: arm64
            outfile: avdcli-linux-arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '^1.23'

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Output directory
        run: mkdir -p bin

      - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
        run: |
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -ldflags="-X 'github.com/schoolyear/avd-cli/static.Version=${{ env.VERSION }}' -X 'github.com/schoolyear/avd-cli/static.ReleaseFile=${{ matrix.outfile }}'" -o bin/${{ matrix.outfile }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.outfile }}
          path: bin/${{ matrix.outfile }}
          if-no-files-found: error

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') || contains(github.ref, '-') }}
          files: |
            bin/avdcli-windows-amd64.exe
            bin/avdcli-windows-arm64.exe
            bin/avdcli-macos-amd64
            bin/avdcli-macos-arm64
            bin/avdcli-linux-amd64
            bin/avdcli-linux-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
